openapi: 3.0.3
info:
  title: Empty
  description: SPA description
  version: 0.0.1
servers:
  - url: 'localhost:8090'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        isAdmin:
          type: boolean
        email:
          type: string
        createdAt:
          type: string
    Message:
      type: object
      properties:
        message:
          type: string
paths:
  /signin:
    post:
      summary: Retrieves user's JWT
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  minLength: 3
                  maxLength: 50
                password:
                  type: string
                  minLength: 3
                  maxLength: 50
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - jwt
                  - isAdmin
                  - email
                properties:
                  _id:
                    type: string
                  email:
                    type: string
                    minLength: 1
                    maxLength: 50
                  isAdmin:
                    type: boolean
                  jwt:
                    type: string
                  createdAt:
                    type: string
        '400':
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /admin/user:
    post:
      summary: Create user
      tags:
        - User management
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  minLength: 3
                  maxLength: 50
                password:
                  type: string
                  minLength: 3
                  maxLength: 50
                isAdmin:
                  type: boolean
              required: [ email, password, isAdmin ]
      responses:
        '201':
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Not valid email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /admin/users:
    get:
      summary: Retrieves all users
      tags:
        - User management
      parameters:
        - in: query
          name: limit
          description: number of users per page
          schema:
            type: integer
        - in: query
          name: page
          description: page to retrieve
          schema:
            type: integer
        - in: query
          name: isAdmin
          description: Admin or non admin users
          schema:
            type: boolean
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: number of users retrieved by the query
                  pageCount:
                    type: integer
                    description: number of pages retrieved by the query
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /admin/user/{userId}:
    delete:
      summary: Delete user
      tags:
        - User management
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
